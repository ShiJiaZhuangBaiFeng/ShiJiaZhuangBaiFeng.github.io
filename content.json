{"meta":{"title":"苗春童的博客","subtitle":"","description":"","author":"苗春童","url":"https://shijiazhuangbaifeng.github.io","root":"/"},"pages":[{"title":"分类","date":"2020-07-08T02:16:20.000Z","updated":"2020-07-08T02:18:44.079Z","comments":true,"path":"categories/index.html","permalink":"https://shijiazhuangbaifeng.github.io/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2017-05-27T05:47:40.000Z","updated":"2020-07-08T02:18:37.597Z","comments":true,"path":"tags/index.html","permalink":"https://shijiazhuangbaifeng.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Numpy","slug":"Numpy","date":"2020-07-08T02:53:21.000Z","updated":"2020-07-10T14:09:00.599Z","comments":true,"path":"2020/07/08/Numpy/","link":"","permalink":"https://shijiazhuangbaifeng.github.io/2020/07/08/Numpy/","excerpt":"","text":"NumPy是Python中科学计算的基础包。它是一个Python库，提供多维数组对象，各种派生对象（如掩码数组和矩阵），以及用于数组快速操作的各种API，有包括数学、逻辑、形状操作、排序、选择、输入输出、离散傅立叶变换、基本线性代数，基本统计运算和随机模拟等等。1pip install numpy创建数组array根据已有的 array 对象，来创建经过 numpy 增强以后的 ndarray 对象：1234567import numpy as npl = &#123;1, 2, 3, 4, 5, 6, 7&#125;l = np.array(l)type(l)生成数组ones生成一个ndarray 数组的元素全部为 1：1np.ones(shape=(5,5), dtype=np.int8)shape 表示生成数组形状，例如上面的生成二维的数组，第一维和第二维都分别有 5 的元素，dtype 表示元素类型。zeros1np.zeros(shape=(2,5,2), dtype=np.float)效果同上，生成元素为 0 的数组。full1np.full(shape=(3,1,4), fill_value=3.14)自定义填充数组元素的值。eye1np.eye(N=5)生成单位矩阵。linespace1np.linspace(0,100,101)左闭右闭，等差数列，上一个的差和下一个的差永远相等。arange1np.arange(0,100,3)这个函数和 range 函数效果几乎完全相同。正太分布1np.random.randn(4,5)平均值为 0 ，方差是 1，这个函数是固定的。1n = np.random.normal(loc=175,scale=2,size=100).round(2)normal 可以指定 平均值和方差，round函数表示保留的小数位。数据方法round1n = np.random.normal(loc=175,scale=2,size=100).round(2)指定数据元素保留的小数位。三角函数np.sin1np.sin(n)对 n 的每一个元素进行 sin 操作。ndarrayndarray属性属性/方法作用shape数组对象的格式dtype数组元素类型ndim数组维度size数组元素个数nbytes数组元素消耗的总字节数reshape(shape[, order])返回包含具有新形状的相同数据的数组。切片操作","categories":[{"name":"Python","slug":"Python","permalink":"https://shijiazhuangbaifeng.github.io/categories/Python/"}],"tags":[{"name":"数据分析","slug":"数据分析","permalink":"https://shijiazhuangbaifeng.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"},{"name":"python第三方库","slug":"python第三方库","permalink":"https://shijiazhuangbaifeng.github.io/tags/python%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/"}]},{"title":"Matplotlib","slug":"matplotlib","date":"2020-07-08T02:53:21.000Z","updated":"2020-07-08T04:00:12.015Z","comments":true,"path":"2020/07/08/matplotlib/","link":"","permalink":"https://shijiazhuangbaifeng.github.io/2020/07/08/matplotlib/","excerpt":"","text":"Matplotlib用来绘制图表的工具，数据可视化，能够绘制柱状图，直方图，折线图等图表，安装Matplotlib:1pip install matplotlib绘制折线图使用Matplotlib绘图要使用pyplot这个模块：1import matplotlib.pyplot as pyplotpyplot关于图表的基本方法如下：方法参数作用pyplot.title()label：图表的名称当前图表的名称pyplot.rcParams[&#39;font.sans-serif&#39;]赋予一个字符串，字体设置字体，对中文进行支持pyplot.xlabel()xlabel：x轴的名称设置x轴名称pyplot.ylabel()ylabel：y轴的名称设置y轴名称pyplot.show()将内存的表展示出来，重新绘制pyplot.savefig()第一个参数为名称保存为图片12345678910111213141516171819202122232425import matplotlib.pyplot as pylot# title 图标的标题pylot.title('折线图')# 中文标题pylot.rcParams['font.sans-serif'] = 'Kaiti'# 直线# pylot.plot((1,4),(2,8))# 坐标x = [1, 2, 3, 4, 5, 5]y = [1, 2, 3, 4, 5, 4]# 折线 linewidth 宽度pylot.plot(x, y, linewidth=2)# x 轴名称pylot.xlabel('x轴')# y 轴的名称pylot.ylabel('y轴')# 显示pylot.show()绘制一元二次方程1234567891011121314151617181920212223242526import matplotlib.pyplot as pylotimport numpy as np# x 和 y 的值x = np.linspace(-10, 10, 100, dtype=float)y = x ** -1print(x)print(y)# pylot.axhline(0)pylot.axvline(0, color='red')# 折线 linewidth 宽度pylot.plot(x, y, linewidth=1)# x 轴名称pylot.xlabel('x')# y 轴的名称pylot.ylabel('y')# 保存图片pylot.savefig(\"一元二次方程\")# 显示pylot.show()分区sublot将画布分为n行n列，并进入某一块分区：12# 分区pylot.subplot(2,2,1)想要切换分区再次调用即可，但是行列要和上一次一致散点图散点图使用的是scatter方法，该方法有以下参数：参数作用x一个集合，存放xy一个集合，存放ys大小，一个集合，要和点的个数一致c颜色，和s相同alpha透明度0~1123456789101112131415import numpy as npimport matplotlib.pyplot as ploy# 等差数列x = np.random.randint(10,100,50)y = np.random.randint(10,100,50)# sizesize = np.random.randint(50,500,50)# colorcolor = np.random.randint(10,100,50)# 绘制散点图ploy.scatter(x,y,s=size,alpha=0.5,c=color)# 展示ploy.show()图例在绘制折线图的时候，会绘制许多条线，每一条线使用不同的样式来描述，需要一块内容来描述每一条线的作用：12345678910111213141516171819import numpy as npimport matplotlib.pyplot as pylot# 生成 xx = np.linspace(-10, 10, 100)sin_y = np.sin(x)cos_y = np.cos(x)# 绘制pylot.plot(x, sin_y, '--y', label='sin')pylot.plot(x, cos_y, '-g', label='cos')pylot.axhline(0, c=\"#FF6347\", ls=\"--\", lw=1)# 显示图例 loc : 图例的位置 labels : 每一个线条的注释 lines : 每一个线条的样式pylot.legend(loc='upper left') # fancybox边框 framealpha透明度 shadow明影边框宽度# 展示pylot.show()plot的label参数就是图例的信息，legend显示图例，默认是不显示的，接收一个参数，图例所在的位置.格式化在plot函数中还接受一个参数fmt格式化线条：color字符颜色字符颜色字符颜色字符颜色b蓝色r红色m洋红色k黑色g绿色c青色y黄色w白色marker字符标记字符标记字符标记字符标记.点标记&gt;右三角标记p五边形标记D菱形标记,像素标记1三叉戟标记*星形标记d菱形标记o圆圈标记2三叉戟标记h六角形标记v倒三角标记3三叉戟标记H六角形标记_横线标记^正三角标记4三叉戟标记++标记&lt;左三角标记s正方形标记xx标记&lt;line字符格式字符格式字符格式字符格式-实线–虚线-.点划线:点线柱状图绘制柱状图使用的函数的bar和barh，barh是用来绘制水平方向的柱状图：12345678910111213141516171819import matplotlib.pyplot as pyplotimport numpy as np# 年份x = ['1980', '1981', '1982']# 销量y = [2000, 3000, 4000]# 绘制柱状图pyplot.bar(x, y, width=0.5) # width 在原来的宽度倍数# 水平方向绘制pyplot.barh(x, y)# x 坐标的值# yplot.xticks()# 展示pyplot.show()xticks用来修改x坐标上x的值电影票销量12345678910111213141516171819202122232425262728import numpy as npimport matplotlib.pyplot as pyplot# 中文标题pyplot.rcParams['font.sans-serif'] = 'Kaiti'# 电影movie = ['哪吒之魔童降世', '流浪地球', '复仇者联盟4：终局之战', '我和我的祖国']# 三天内票房数movie_day1 = np.random.randint(1000, 2000, size=len(movie))movie_day2 = np.random.randint(1000, 2000, size=len(movie))movie_day3 = np.random.randint(1000, 2000, size=len(movie))print(movie_day1)# x 坐标x = np.arange(len(movie))# 绘制柱状图pyplot.bar(x, movie_day1, alpha=0.5 , width=0.3, label='第一天')pyplot.bar(x + 0.3, movie_day2, alpha=0.5, width=0.3, label='第一天')pyplot.bar(x + 0.6, movie_day3, alpha=0.5, width=0.3, label='第一天')# 设置值pyplot.xticks(x + 0.3,movie)pyplot.legend()# 展示pyplot.show()饼状图饼状图用到的方法是pie：1234567891011121314151617import numpy as npimport matplotlib.pyplot as pyplotman = 1060woman = 1520# 中文标题pyplot.rcParams['font.sans-serif'] = 'Kaiti'# 比例man_perc = man / (man + woman)woman_perc = 1 - man_perc# 绘制饼状图pyplot.pie([man_perc,woman_perc],labels=['男','女'],colors=['red','green'])# 展示pyplot.show()直方图直方图用来观测数据的分布情况：123456789101112131415161718\"\"\"直方图关心的是分布的状态\"\"\"import numpy as npimport matplotlib.pyplot as pyplot# 正太分布random = np.random.normal(0,0.8,1000)random1 = np.random.normal(1,0.8,1000)random2 = np.random.normal(2,0.8,1000)print(random)# 绘制 binds = 直方图的数量pyplot.hist(random,bins=100,alpha=0.5)pyplot.hist(random1,bins=100,alpha=0.5)pyplot.hist(random2,bins=100,alpha=0.5)pyplot.show()","categories":[{"name":"Python","slug":"Python","permalink":"https://shijiazhuangbaifeng.github.io/categories/Python/"}],"tags":[{"name":"数据分析","slug":"数据分析","permalink":"https://shijiazhuangbaifeng.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"},{"name":"python第三方库","slug":"python第三方库","permalink":"https://shijiazhuangbaifeng.github.io/tags/python%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/"},{"name":"数据可视化","slug":"数据可视化","permalink":"https://shijiazhuangbaifeng.github.io/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"}]}],"categories":[{"name":"Python","slug":"Python","permalink":"https://shijiazhuangbaifeng.github.io/categories/Python/"}],"tags":[{"name":"数据分析","slug":"数据分析","permalink":"https://shijiazhuangbaifeng.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"},{"name":"python第三方库","slug":"python第三方库","permalink":"https://shijiazhuangbaifeng.github.io/tags/python%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/"},{"name":"数据可视化","slug":"数据可视化","permalink":"https://shijiazhuangbaifeng.github.io/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"}]}