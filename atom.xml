<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>苗春童的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://shijiazhuangbaifeng.github.io/"/>
  <updated>2020-07-10T14:09:00.599Z</updated>
  <id>https://shijiazhuangbaifeng.github.io/</id>
  
  <author>
    <name>苗春童</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Numpy</title>
    <link href="https://shijiazhuangbaifeng.github.io/2020/07/08/Numpy/"/>
    <id>https://shijiazhuangbaifeng.github.io/2020/07/08/Numpy/</id>
    <published>2020-07-08T02:53:21.000Z</published>
    <updated>2020-07-10T14:09:00.599Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Jul 10 2020 22:09:33 GMT+0800 (GMT+08:00) --><p>NumPy是Python中科学计算的基础包。它是一个Python库，提供多维数组对象，各种派生对象（如掩码数组和矩阵），以及用于数组快速操作的各种API，有包括数学、逻辑、形状操作、排序、选择、输入输出、离散傅立叶变换、基本线性代数，基本统计运算和随机模拟等等。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install numpy</span><br></pre></td></tr></table></figure><h2 id="创建数组"><a href="#创建数组" class="headerlink" title="创建数组"></a>创建数组</h2><h3 id="array"><a href="#array" class="headerlink" title="array"></a>array</h3><p>根据已有的 <code>array</code> 对象，来创建经过 <code>numpy</code> 增强以后的 <code>ndarray</code> 对象：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">l = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>&#125;</span><br><span class="line"></span><br><span class="line">l = np.array(l)</span><br><span class="line"></span><br><span class="line">type(l)</span><br></pre></td></tr></table></figure><h3 id="生成数组"><a href="#生成数组" class="headerlink" title="生成数组"></a>生成数组</h3><h4 id="ones"><a href="#ones" class="headerlink" title="ones"></a>ones</h4><p>生成一个<code>ndarray</code> 数组的元素全部为 <code>1</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.ones(shape=(<span class="number">5</span>,<span class="number">5</span>), dtype=np.int8)</span><br></pre></td></tr></table></figure><p><code>shape</code> 表示生成数组形状，例如上面的生成二维的数组，第一维和第二维都分别有 <code>5</code> 的元素，<code>dtype</code> 表示元素类型。</p><h4 id="zeros"><a href="#zeros" class="headerlink" title="zeros"></a>zeros</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.zeros(shape=(<span class="number">2</span>,<span class="number">5</span>,<span class="number">2</span>), dtype=np.float)</span><br></pre></td></tr></table></figure><p>效果同上，生成元素为 <code>0</code> 的数组。</p><h4 id="full"><a href="#full" class="headerlink" title="full"></a>full</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.full(shape=(<span class="number">3</span>,<span class="number">1</span>,<span class="number">4</span>), fill_value=<span class="number">3.14</span>)</span><br></pre></td></tr></table></figure><p>自定义填充数组元素的值。</p><h4 id="eye"><a href="#eye" class="headerlink" title="eye"></a>eye</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.eye(N=<span class="number">5</span>)</span><br></pre></td></tr></table></figure><p>生成单位矩阵。</p><h4 id="linespace"><a href="#linespace" class="headerlink" title="linespace"></a>linespace</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.linspace(<span class="number">0</span>,<span class="number">100</span>,<span class="number">101</span>)</span><br></pre></td></tr></table></figure><p>左闭右闭，等差数列，上一个的差和下一个的差永远相等。</p><h4 id="arange"><a href="#arange" class="headerlink" title="arange"></a>arange</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.arange(<span class="number">0</span>,<span class="number">100</span>,<span class="number">3</span>)</span><br></pre></td></tr></table></figure><p>这个函数和 <code>range</code> 函数效果几乎完全相同。</p><h4 id="正太分布"><a href="#正太分布" class="headerlink" title="正太分布"></a>正太分布</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.random.randn(<span class="number">4</span>,<span class="number">5</span>)</span><br></pre></td></tr></table></figure><p>平均值为 <code>0</code> ，方差是 <code>1</code>，这个函数是固定的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">n = np.random.normal(loc=<span class="number">175</span>,scale=<span class="number">2</span>,size=<span class="number">100</span>).round(<span class="number">2</span>)</span><br></pre></td></tr></table></figure><p><code>normal</code> 可以指定 平均值和方差，<code>round</code>函数表示保留的小数位。</p><h2 id="数据方法"><a href="#数据方法" class="headerlink" title="数据方法"></a>数据方法</h2><h3 id="round"><a href="#round" class="headerlink" title="round"></a>round</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">n = np.random.normal(loc=<span class="number">175</span>,scale=<span class="number">2</span>,size=<span class="number">100</span>).round(<span class="number">2</span>)</span><br></pre></td></tr></table></figure><p>指定数据元素保留的小数位。</p><h3 id="三角函数"><a href="#三角函数" class="headerlink" title="三角函数"></a>三角函数</h3><h3 id="np-sin"><a href="#np-sin" class="headerlink" title="np.sin"></a>np.sin</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.sin(n)</span><br></pre></td></tr></table></figure><p>对 <code>n</code> 的每一个元素进行 <code>sin</code> 操作。</p><h2 id="ndarray"><a href="#ndarray" class="headerlink" title="ndarray"></a>ndarray</h2><h3 id="ndarray属性"><a href="#ndarray属性" class="headerlink" title="ndarray属性"></a>ndarray属性</h3><table><thead><tr><th>属性/方法</th><th>作用</th></tr></thead><tbody><tr><td><code>shape</code></td><td>数组对象的格式</td></tr><tr><td><code>dtype</code></td><td>数组元素类型</td></tr><tr><td><code>ndim</code></td><td>数组维度</td></tr><tr><td><code>size</code></td><td>数组元素个数</td></tr><tr><td><code>nbytes</code></td><td>数组元素消耗的总字节数</td></tr><tr><td><code>reshape(shape[, order])</code></td><td>返回包含具有新形状的相同数据的数组。</td></tr></tbody></table><h3 id="切片操作"><a href="#切片操作" class="headerlink" title="切片操作"></a>切片操作</h3><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Fri Jul 10 2020 22:09:33 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;NumPy是Python中科学计算的基础包。它是一个Python库，提供多维数组对象，各种派生对象（如掩码数组和矩阵），以及用于数组快速操作的各
      
    
    </summary>
    
    
      <category term="Python" scheme="https://shijiazhuangbaifeng.github.io/categories/Python/"/>
    
    
      <category term="数据分析" scheme="https://shijiazhuangbaifeng.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
      <category term="python第三方库" scheme="https://shijiazhuangbaifeng.github.io/tags/python%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>Matplotlib</title>
    <link href="https://shijiazhuangbaifeng.github.io/2020/07/08/matplotlib/"/>
    <id>https://shijiazhuangbaifeng.github.io/2020/07/08/matplotlib/</id>
    <published>2020-07-08T02:53:21.000Z</published>
    <updated>2020-07-08T04:00:12.015Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Jul 10 2020 22:09:33 GMT+0800 (GMT+08:00) --><p><code>Matplotlib</code>用来绘制图表的工具，数据可视化，能够绘制柱状图，直方图，折线图等图表，安装<code>Matplotlib</code>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install matplotlib</span><br></pre></td></tr></table></figure><h2 id="绘制折线图"><a href="#绘制折线图" class="headerlink" title="绘制折线图"></a>绘制折线图</h2><p>使用<code>Matplotlib</code>绘图要使用<code>pyplot</code>这个模块：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> pyplot</span><br></pre></td></tr></table></figure><p><code>pyplot</code>关于图表的基本方法如下：</p><table><thead><tr><th>方法</th><th>参数</th><th>作用</th></tr></thead><tbody><tr><td><code>pyplot.title()</code></td><td><code>label</code>：图表的名称</td><td>当前图表的名称</td></tr><tr><td><code>pyplot.rcParams[&#39;font.sans-serif&#39;]</code></td><td>赋予一个字符串，字体</td><td>设置字体，对中文进行支持</td></tr><tr><td><code>pyplot.xlabel()</code></td><td><code>xlabel</code>：x轴的名称</td><td>设置x轴名称</td></tr><tr><td><code>pyplot.ylabel()</code></td><td><code>ylabel</code>：y轴的名称</td><td>设置y轴名称</td></tr><tr><td><code>pyplot.show()</code></td><td></td><td>将内存的表展示出来，重新绘制</td></tr><tr><td><code>pyplot.savefig()</code></td><td>第一个参数为名称</td><td>保存为图片</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> pylot</span><br><span class="line"></span><br><span class="line"><span class="comment"># title 图标的标题</span></span><br><span class="line">pylot.title(<span class="string">'折线图'</span>)</span><br><span class="line"><span class="comment"># 中文标题</span></span><br><span class="line">pylot.rcParams[<span class="string">'font.sans-serif'</span>] = <span class="string">'Kaiti'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 直线</span></span><br><span class="line"><span class="comment"># pylot.plot((1,4),(2,8))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 坐标</span></span><br><span class="line">x = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">5</span>]</span><br><span class="line">y = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">4</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 折线 linewidth 宽度</span></span><br><span class="line">pylot.plot(x, y, linewidth=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># x 轴名称</span></span><br><span class="line">pylot.xlabel(<span class="string">'x轴'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># y 轴的名称</span></span><br><span class="line">pylot.ylabel(<span class="string">'y轴'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示</span></span><br><span class="line">pylot.show()</span><br></pre></td></tr></table></figure><h3 id="绘制一元二次方程"><a href="#绘制一元二次方程" class="headerlink" title="绘制一元二次方程"></a>绘制一元二次方程</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> pylot</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># x 和 y 的值</span></span><br><span class="line">x = np.linspace(<span class="number">-10</span>, <span class="number">10</span>, <span class="number">100</span>, dtype=float)</span><br><span class="line">y = x ** <span class="number">-1</span></span><br><span class="line">print(x)</span><br><span class="line">print(y)</span><br><span class="line"></span><br><span class="line"><span class="comment"># pylot.axhline(0)</span></span><br><span class="line">pylot.axvline(<span class="number">0</span>, color=<span class="string">'red'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 折线 linewidth 宽度</span></span><br><span class="line">pylot.plot(x, y, linewidth=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># x 轴名称</span></span><br><span class="line">pylot.xlabel(<span class="string">'x'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># y 轴的名称</span></span><br><span class="line">pylot.ylabel(<span class="string">'y'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存图片</span></span><br><span class="line">pylot.savefig(<span class="string">"一元二次方程"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示</span></span><br><span class="line">pylot.show()</span><br></pre></td></tr></table></figure><h2 id="分区"><a href="#分区" class="headerlink" title="分区"></a>分区</h2><p><code>sublot</code>将画布分为<code>n</code>行<code>n</code>列，并进入某一块分区：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 分区</span></span><br><span class="line">pylot.subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>)</span><br></pre></td></tr></table></figure><blockquote><p>想要切换分区再次调用即可，但是行列要和上一次一致</p></blockquote><h2 id="散点图"><a href="#散点图" class="headerlink" title="散点图"></a>散点图</h2><p>散点图使用的是<code>scatter</code>方法，该方法有以下参数：</p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td><code>x</code></td><td>一个集合，存放<code>x</code></td></tr><tr><td><code>y</code></td><td>一个集合，存放<code>y</code></td></tr><tr><td><code>s</code></td><td>大小，一个集合，要和点的个数一致</td></tr><tr><td><code>c</code></td><td>颜色，和<code>s</code>相同</td></tr><tr><td><code>alpha</code></td><td>透明度<code>0~1</code></td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> ploy</span><br><span class="line"></span><br><span class="line"><span class="comment"># 等差数列</span></span><br><span class="line">x = np.random.randint(<span class="number">10</span>,<span class="number">100</span>,<span class="number">50</span>)</span><br><span class="line">y = np.random.randint(<span class="number">10</span>,<span class="number">100</span>,<span class="number">50</span>)</span><br><span class="line"><span class="comment"># size</span></span><br><span class="line">size = np.random.randint(<span class="number">50</span>,<span class="number">500</span>,<span class="number">50</span>)</span><br><span class="line"><span class="comment"># color</span></span><br><span class="line">color = np.random.randint(<span class="number">10</span>,<span class="number">100</span>,<span class="number">50</span>)</span><br><span class="line"><span class="comment"># 绘制散点图</span></span><br><span class="line">ploy.scatter(x,y,s=size,alpha=<span class="number">0.5</span>,c=color)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 展示</span></span><br><span class="line">ploy.show()</span><br></pre></td></tr></table></figure><h2 id="图例"><a href="#图例" class="headerlink" title="图例"></a>图例</h2><p>在绘制折线图的时候，会绘制许多条线，每一条线使用不同的样式来描述，需要一块内容来描述每一条线的作用：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> pylot</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成 x</span></span><br><span class="line">x = np.linspace(<span class="number">-10</span>, <span class="number">10</span>, <span class="number">100</span>)</span><br><span class="line">sin_y = np.sin(x)</span><br><span class="line">cos_y = np.cos(x)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制</span></span><br><span class="line">pylot.plot(x, sin_y, <span class="string">'--y'</span>, label=<span class="string">'sin'</span>)</span><br><span class="line">pylot.plot(x, cos_y, <span class="string">'-g'</span>, label=<span class="string">'cos'</span>)</span><br><span class="line"></span><br><span class="line">pylot.axhline(<span class="number">0</span>, c=<span class="string">"#FF6347"</span>, ls=<span class="string">"--"</span>, lw=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示图例 loc : 图例的位置 labels : 每一个线条的注释 lines : 每一个线条的样式</span></span><br><span class="line">pylot.legend(loc=<span class="string">'upper left'</span>)  <span class="comment"># fancybox边框 framealpha透明度 shadow明影边框宽度</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 展示</span></span><br><span class="line">pylot.show()</span><br></pre></td></tr></table></figure><p><code>plot</code>的<code>label</code>参数就是图例的信息，<code>legend</code>显示图例，默认是不显示的，接收一个参数，图例所在的位置.</p><h3 id="格式化"><a href="#格式化" class="headerlink" title="格式化"></a>格式化</h3><p>在<code>plot</code>函数中还接受一个参数<code>fmt</code>格式化线条：</p><center>color</center><table><thead><tr><th>字符</th><th>颜色</th><th>字符</th><th>颜色</th><th>字符</th><th>颜色</th><th>字符</th><th>颜色</th></tr></thead><tbody><tr><td><strong>b</strong></td><td>蓝色</td><td><strong>r</strong></td><td>红色</td><td><strong>m</strong></td><td>洋红色</td><td><strong>k</strong></td><td>黑色</td></tr><tr><td><strong>g</strong></td><td>绿色</td><td><strong>c</strong></td><td>青色</td><td><strong>y</strong></td><td>黄色</td><td><strong>w</strong></td><td>白色</td></tr></tbody></table><center>marker</center><table><thead><tr><th>字符</th><th>标记</th><th>字符</th><th>标记</th><th>字符</th><th>标记</th><th>字符</th><th>标记</th></tr></thead><tbody><tr><td>.</td><td>点标记</td><td>&gt;</td><td>右三角标记</td><td>p</td><td>五边形标记</td><td>D</td><td>菱形标记</td></tr><tr><td>,</td><td>像素标记</td><td>1</td><td>三叉戟标记</td><td>*</td><td>星形标记</td><td>d</td><td>菱形标记</td></tr><tr><td>o</td><td>圆圈标记</td><td>2</td><td>三叉戟标记</td><td>h</td><td>六角形标记</td><td></td><td></td></tr><tr><td>v</td><td>倒三角标记</td><td>3</td><td>三叉戟标记</td><td>H</td><td>六角形标记</td><td>_</td><td>横线标记</td></tr><tr><td>^</td><td>正三角标记</td><td>4</td><td>三叉戟标记</td><td>+</td><td>+标记</td><td></td><td></td></tr><tr><td>&lt;</td><td>左三角标记</td><td>s</td><td>正方形标记</td><td>x</td><td>x标记</td><td></td><td>&lt;</td></tr></tbody></table><center>line</center><table><thead><tr><th>字符</th><th>格式</th><th>字符</th><th>格式</th><th>字符</th><th>格式</th><th>字符</th><th>格式</th></tr></thead><tbody><tr><td><strong>-</strong></td><td>实线</td><td><strong>–</strong></td><td>虚线</td><td><strong>-.</strong></td><td>点划线</td><td><strong>:</strong></td><td>点线</td></tr></tbody></table><h2 id="柱状图"><a href="#柱状图" class="headerlink" title="柱状图"></a>柱状图</h2><p>绘制柱状图使用的函数的<code>bar</code>和<code>barh</code>，<code>barh</code>是用来绘制水平方向的柱状图：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> pyplot</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># 年份</span></span><br><span class="line">x = [<span class="string">'1980'</span>, <span class="string">'1981'</span>, <span class="string">'1982'</span>]</span><br><span class="line"><span class="comment"># 销量</span></span><br><span class="line">y = [<span class="number">2000</span>, <span class="number">3000</span>, <span class="number">4000</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制柱状图</span></span><br><span class="line">pyplot.bar(x, y, width=<span class="number">0.5</span>) <span class="comment"># width 在原来的宽度倍数</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 水平方向绘制</span></span><br><span class="line">pyplot.barh(x, y)</span><br><span class="line"></span><br><span class="line"><span class="comment"># x 坐标的值</span></span><br><span class="line"><span class="comment"># yplot.xticks()</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 展示</span></span><br><span class="line">pyplot.show()</span><br></pre></td></tr></table></figure><blockquote><p><code>xticks</code>用来修改<code>x</code>坐标上x的值</p></blockquote><h3 id="电影票销量"><a href="#电影票销量" class="headerlink" title="电影票销量"></a>电影票销量</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> pyplot</span><br><span class="line"></span><br><span class="line"><span class="comment"># 中文标题</span></span><br><span class="line">pyplot.rcParams[<span class="string">'font.sans-serif'</span>] = <span class="string">'Kaiti'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 电影</span></span><br><span class="line">movie = [<span class="string">'哪吒之魔童降世'</span>, <span class="string">'流浪地球'</span>, <span class="string">'复仇者联盟4：终局之战'</span>, <span class="string">'我和我的祖国'</span>]</span><br><span class="line"><span class="comment"># 三天内票房数</span></span><br><span class="line">movie_day1 = np.random.randint(<span class="number">1000</span>, <span class="number">2000</span>, size=len(movie))</span><br><span class="line">movie_day2 = np.random.randint(<span class="number">1000</span>, <span class="number">2000</span>, size=len(movie))</span><br><span class="line">movie_day3 = np.random.randint(<span class="number">1000</span>, <span class="number">2000</span>, size=len(movie))</span><br><span class="line">print(movie_day1)</span><br><span class="line"><span class="comment"># x 坐标</span></span><br><span class="line">x = np.arange(len(movie))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制柱状图</span></span><br><span class="line">pyplot.bar(x, movie_day1, alpha=<span class="number">0.5</span> , width=<span class="number">0.3</span>, label=<span class="string">'第一天'</span>)</span><br><span class="line">pyplot.bar(x + <span class="number">0.3</span>, movie_day2, alpha=<span class="number">0.5</span>, width=<span class="number">0.3</span>, label=<span class="string">'第一天'</span>)</span><br><span class="line">pyplot.bar(x + <span class="number">0.6</span>, movie_day3, alpha=<span class="number">0.5</span>, width=<span class="number">0.3</span>, label=<span class="string">'第一天'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置值</span></span><br><span class="line">pyplot.xticks(x + <span class="number">0.3</span>,movie)</span><br><span class="line"></span><br><span class="line">pyplot.legend()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 展示</span></span><br><span class="line">pyplot.show()</span><br></pre></td></tr></table></figure><h2 id="饼状图"><a href="#饼状图" class="headerlink" title="饼状图"></a>饼状图</h2><p>饼状图用到的方法是<code>pie</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> pyplot</span><br><span class="line"></span><br><span class="line">man = <span class="number">1060</span></span><br><span class="line">woman = <span class="number">1520</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 中文标题</span></span><br><span class="line">pyplot.rcParams[<span class="string">'font.sans-serif'</span>] = <span class="string">'Kaiti'</span></span><br><span class="line"><span class="comment"># 比例</span></span><br><span class="line">man_perc = man / (man + woman)</span><br><span class="line">woman_perc = <span class="number">1</span> - man_perc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制饼状图</span></span><br><span class="line">pyplot.pie([man_perc,woman_perc],labels=[<span class="string">'男'</span>,<span class="string">'女'</span>],colors=[<span class="string">'red'</span>,<span class="string">'green'</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 展示</span></span><br><span class="line">pyplot.show()</span><br></pre></td></tr></table></figure><h2 id="直方图"><a href="#直方图" class="headerlink" title="直方图"></a>直方图</h2><p>直方图用来观测数据的分布情况：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">直方图关心的是分布的状态</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> pyplot</span><br><span class="line"></span><br><span class="line"><span class="comment"># 正太分布</span></span><br><span class="line">random = np.random.normal(<span class="number">0</span>,<span class="number">0.8</span>,<span class="number">1000</span>)</span><br><span class="line">random1 = np.random.normal(<span class="number">1</span>,<span class="number">0.8</span>,<span class="number">1000</span>)</span><br><span class="line">random2 = np.random.normal(<span class="number">2</span>,<span class="number">0.8</span>,<span class="number">1000</span>)</span><br><span class="line">print(random)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制 binds = 直方图的数量</span></span><br><span class="line">pyplot.hist(random,bins=<span class="number">100</span>,alpha=<span class="number">0.5</span>)</span><br><span class="line">pyplot.hist(random1,bins=<span class="number">100</span>,alpha=<span class="number">0.5</span>)</span><br><span class="line">pyplot.hist(random2,bins=<span class="number">100</span>,alpha=<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line">pyplot.show()</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Fri Jul 10 2020 22:09:33 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;&lt;code&gt;Matplotlib&lt;/code&gt;用来绘制图表的工具，数据可视化，能够绘制柱状图，直方图，折线图等图表，安装&lt;code&gt;Matplo
      
    
    </summary>
    
    
      <category term="Python" scheme="https://shijiazhuangbaifeng.github.io/categories/Python/"/>
    
    
      <category term="数据分析" scheme="https://shijiazhuangbaifeng.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
      <category term="python第三方库" scheme="https://shijiazhuangbaifeng.github.io/tags/python%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/"/>
    
      <category term="数据可视化" scheme="https://shijiazhuangbaifeng.github.io/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
  </entry>
  
</feed>
