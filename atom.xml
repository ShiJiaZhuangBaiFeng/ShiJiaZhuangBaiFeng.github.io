<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>苗春童的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://shijiazhuangbaifeng.github.io/"/>
  <updated>2020-07-15T05:07:43.559Z</updated>
  <id>https://shijiazhuangbaifeng.github.io/</id>
  
  <author>
    <name>苗春童</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Elasticsearch</title>
    <link href="https://shijiazhuangbaifeng.github.io/2020/07/15/Eelasticsearch/"/>
    <id>https://shijiazhuangbaifeng.github.io/2020/07/15/Eelasticsearch/</id>
    <published>2020-07-15T02:53:21.000Z</published>
    <updated>2020-07-15T05:07:43.559Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Jul 15 2020 13:09:25 GMT+0800 (GMT+08:00) --><h2 id="安装-Elasticsearch"><a href="#安装-Elasticsearch" class="headerlink" title="安装 Elasticsearch"></a>安装 Elasticsearch</h2><h3 id="单机安装-Elasticsearch"><a href="#单机安装-Elasticsearch" class="headerlink" title="单机安装 Elasticsearch"></a>单机安装 Elasticsearch</h3><p>安装 <code>Elasticsearch</code> 需要的文件有：</p><ul><li>analysis-ik</li><li>cerebro-0.8.3</li><li>elasticsearch-6.3.1.tar.gz</li><li>elasticsearch-analysis-ik-5.6.4.zip</li><li>elasticsearch-analysis-ik6.rar</li><li>kibana-5.6.4-linux-x86_64.tar.gz</li><li>kibana-6.3.1-linux-x86_64.tar.gz</li></ul><ol><li><p>进入 <code>ubuntu</code> 服务器，创建目录，将以上的文件上传到该文件目录中：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /url/<span class="built_in">local</span>/elasticsearch</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /url/<span class="built_in">local</span>/elasticsearch</span><br><span class="line"></span><br><span class="line">ls -la</span><br><span class="line"></span><br><span class="line">total 400136</span><br><span class="line">drwxr-xr-x  5 root root      4096 Jul 12 23:39 ./</span><br><span class="line">drwxr-xr-x 12 root root      4096 Jul 12 23:34 ../</span><br><span class="line">drwxrwxr-x  3 miao miao      4096 Jul 12 23:32 analysis-ik/</span><br><span class="line">drwxrwxr-x  5 miao miao      4096 Jul 12 23:32 cerebro-0.8.3/</span><br><span class="line">-rw-rw-r--  1 miao miao  52402153 Apr 24  2019 cerebro-0.8.3.zip</span><br><span class="line">-rw-rw-r--  1 miao miao  91429350 Apr 12  2019 elasticsearch-6.3.1.tar.gz</span><br><span class="line">-rw-rw-r--  1 miao miao   4502411 Apr 15  2018 elasticsearch-analysis-ik-5.6.4.zip</span><br><span class="line">-rw-rw-r--  1 miao miao   4128393 May 17  2019 elasticsearch-analysis-ik6.rar</span><br><span class="line">-rw-rw-r--  1 miao miao  51834711 Apr 15  2018 kibana-5.6.4-linux-x86_64.tar.gz</span><br><span class="line">-rw-rw-r--  1 miao miao 205397076 Apr 12  2019 kibana-6.3.1-linux-x86_64.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>解压 <code>elasticsearch-6.3.1.tar.gz</code> 进入文件中进行配置：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> elasticsearch-6.3.1</span><br></pre></td></tr></table></figure></li><li><p>运行 <code>Elasticsearch</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./elasticsearch</span><br><span class="line"></span><br><span class="line">nohup ./elasticsearch &amp;</span><br></pre></td></tr></table></figure></li><li><p>浏览器访问 <code>192.168.159.135:9200</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span> : <span class="string">"QNWRcMX"</span>,</span><br><span class="line">  <span class="attr">"cluster_name"</span> : <span class="string">"elasticsearch"</span>,</span><br><span class="line">  <span class="attr">"cluster_uuid"</span> : <span class="string">"0xiTx31VTxy8UUxaRR96AA"</span>,</span><br><span class="line">  <span class="attr">"version"</span> : &#123;</span><br><span class="line">    <span class="attr">"number"</span> : <span class="string">"6.3.1"</span>,</span><br><span class="line">    <span class="attr">"build_flavor"</span> : <span class="string">"default"</span>,</span><br><span class="line">    <span class="attr">"build_type"</span> : <span class="string">"tar"</span>,</span><br><span class="line">    <span class="attr">"build_hash"</span> : <span class="string">"eb782d0"</span>,</span><br><span class="line">    <span class="attr">"build_date"</span> : <span class="string">"2018-06-29T21:59:26.107521Z"</span>,</span><br><span class="line">    <span class="attr">"build_snapshot"</span> : <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"lucene_version"</span> : <span class="string">"7.3.1"</span>,</span><br><span class="line">    <span class="attr">"minimum_wire_compatibility_version"</span> : <span class="string">"5.6.0"</span>,</span><br><span class="line">    <span class="attr">"minimum_index_compatibility_version"</span> : <span class="string">"5.0.0"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"tagline"</span> : <span class="string">"You Know, for Search"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>以上步骤进行完了以后还需要配置 <code>elasticsearch-6.3.1/config</code> 目录下的两个配置文件： <code>jvm.options</code> 和 <code>elasticsearch.yml</code> 两个配置文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 测试环境使用内存大小</span><br><span class="line">-Xms256</span><br><span class="line">-Xmx256</span><br></pre></td></tr></table></figure><p>在 <code>jvm.options</code> 中配置虚拟机的内存大小。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">network.host:</span> <span class="number">192.168</span><span class="number">.159</span><span class="number">.135</span></span><br><span class="line"></span><br><span class="line"><span class="attr">http.port:</span> <span class="number">9200</span></span><br></pre></td></tr></table></figure><p>如果不配置以上内存，<code>elastticsearch</code> 只能够在内网访问。</p><h4 id="错误"><a href="#错误" class="headerlink" title="错误"></a>错误</h4><ul><li><p><code>can not run elasticsearch as root</code></p><p>完整的错误信息如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">org.elasticsearch.bootstrap.StartupException: java.lang.RuntimeException: can not run elasticsearch as root</span><br><span class="line">        at org.elasticsearch.bootstrap.Elasticsearch.init(Elasticsearch.java:140) ~[elasticsearch-6.3.1.jar:6.3.1]</span><br><span class="line">        at org.elasticsearch.bootstrap.Elasticsearch.execute(Elasticsearch.java:127) ~[elasticsearch-6.3.1.jar:6.3.1]</span><br><span class="line">        at org.elasticsearch.cli.EnvironmentAwareCommand.execute(EnvironmentAwareCommand.java:86) ~[elasticsearch-6.3.1.jar:6.3.1]</span><br><span class="line">        at org.elasticsearch.cli.Command.mainWithoutErrorHandling(Command.java:124) ~[elasticsearch-cli-6.3.1.jar:6.3.1]</span><br><span class="line">        at org.elasticsearch.cli.Command.main(Command.java:90) ~[elasticsearch-cli-6.3.1.jar:6.3.1]</span><br><span class="line">        at org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:93) ~[elasticsearch-6.3.1.jar:6.3.1]</span><br><span class="line">        at org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:86) ~[elasticsearch-6.3.1.jar:6.3.1]</span><br><span class="line">Caused by: java.lang.RuntimeException: can not run elasticsearch as root</span><br><span class="line">        at org.elasticsearch.bootstrap.Bootstrap.initializeNatives(Bootstrap.java:104) ~[elasticsearch-6.3.1.jar:6.3.1]</span><br><span class="line">        at org.elasticsearch.bootstrap.Bootstrap.setup(Bootstrap.java:171) ~[elasticsearch-6.3.1.jar:6.3.1]</span><br><span class="line">        at org.elasticsearch.bootstrap.Bootstrap.init(Bootstrap.java:326) ~[elasticsearch-6.3.1.jar:6.3.1]</span><br><span class="line">        at org.elasticsearch.bootstrap.Elasticsearch.init(Elasticsearch.java:136) ~[elasticsearch-6.3.1.jar:6.3.1]</span><br><span class="line">        ... 6 more</span><br></pre></td></tr></table></figure><p>为了安全问题 <code>elasticsearch</code> 不能通过 <code>root</code> 账户直接启动，需要创建一个新的用户：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">adduser es</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /url/<span class="built_in">local</span>/elasticsearch</span><br></pre></td></tr></table></figure></li><li><p><code>max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]</code></p><p><code>Linux</code> 默认的最大线程数</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/security/limits.conf</span><br><span class="line"></span><br><span class="line">* hard nofile 655360</span><br><span class="line">* soft nofile 131072</span><br><span class="line">* hard nproc 4096</span><br><span class="line">* soft nproc 2048</span><br><span class="line"></span><br><span class="line">vim /etc/sysctl.conf</span><br><span class="line"></span><br><span class="line">vm.max_map_count=655360</span><br><span class="line">fs.file-max=655360</span><br><span class="line"></span><br><span class="line">sysctl -p</span><br></pre></td></tr></table></figure></li></ul><h3 id="Elasticsearch-集群"><a href="#Elasticsearch-集群" class="headerlink" title="Elasticsearch 集群"></a>Elasticsearch 集群</h3><ol><li><p>修改配置文件 <code>elasticsearch.yml</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 集群名称（相同）</span></span><br><span class="line"><span class="attr">cluster.name:</span> <span class="string">aubin-cluster</span>     </span><br><span class="line"><span class="comment"># 集群下节点的名称，节点名称，仅仅是描述名称，用于在日志中区分（自定义）</span></span><br><span class="line"><span class="attr">node.name:</span> <span class="string">els1（必须不同）</span></span><br><span class="line"><span class="comment">#指定了该节点可能成为 master 节点，还可以是数据节点</span></span><br><span class="line"><span class="attr">node.master:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">node.data:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># 数据的默认存放路径（自定义）</span></span><br><span class="line"><span class="attr">path.data:</span> <span class="string">/opt/data</span></span><br><span class="line"><span class="comment"># 日志的默认存放路径 </span></span><br><span class="line"><span class="attr">path.logs:</span> <span class="string">/opt/logs</span> </span><br><span class="line"><span class="comment"># 当前节点的IP地址 </span></span><br><span class="line"><span class="attr">network.host:</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.1</span> </span><br><span class="line"><span class="comment"># 对外提供服务的端口</span></span><br><span class="line"><span class="attr">http.port:</span> <span class="number">9200</span> </span><br><span class="line"><span class="comment">#9300为集群服务的端口 </span></span><br><span class="line"><span class="attr">transport.tcp.port:</span> <span class="number">9300</span></span><br><span class="line"><span class="comment"># 集群个节点IP地址，也可以使用域名，需要各节点能够解析 </span></span><br><span class="line"><span class="attr">discovery.zen.ping.unicast.hosts:</span> <span class="string">["172.18.68.11",</span> <span class="string">"172.18.68.12"</span><span class="string">,"172.18.68.13"]</span> </span><br><span class="line"><span class="comment"># 为了避免脑裂，集群节点数最少为 半数+1</span></span><br><span class="line"><span class="attr">discovery.zen.minimum_master_nodes:</span> <span class="number">2</span></span><br></pre></td></tr></table></figure></li></ol><blockquote><p>注意：清空<code>data</code>和<code>logs</code>数据</p></blockquote><h2 id="使用Elasticsearch"><a href="#使用Elasticsearch" class="headerlink" title="使用Elasticsearch"></a>使用Elasticsearch</h2><h3 id="Elasticsearch-交互方式"><a href="#Elasticsearch-交互方式" class="headerlink" title="Elasticsearch 交互方式"></a>Elasticsearch 交互方式</h3><p>通过 <code>HTTP</code> 协议，以 <code>JSON</code> 格式 <code>RESTFUL API</code>，<code>GET</code> <code>POST</code> <code>PUT</code> <code>DELETE</code> <code>HEAD</code></p><h3 id="Search-API"><a href="#Search-API" class="headerlink" title="Search API"></a>Search API</h3><h4 id="查询有哪些索引"><a href="#查询有哪些索引" class="headerlink" title="查询有哪些索引"></a>查询有哪些索引</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET /_cat/indices?v</span><br></pre></td></tr></table></figure><p>表头的含义：</p><table><thead><tr><th>名称</th><th>含义</th></tr></thead><tbody><tr><td><code>health</code></td><td><code>green</code>(集群完整) <code>yellow</code>(单点正常、集群不完整) <code>red</code>(单点不正常)</td></tr><tr><td><code>status</code></td><td>是否能使用</td></tr><tr><td><code>index</code></td><td>索引</td></tr><tr><td><code>uuid</code></td><td>索引统一 <code>id</code></td></tr><tr><td><code>pri</code></td><td>主节点有几个</td></tr><tr><td><code>rep</code></td><td>从节点</td></tr><tr><td><code>docs.count</code></td><td>文档数</td></tr><tr><td><code>docs.delete</code></td><td>文档删除数</td></tr><tr><td><code>store.size</code></td><td>整体占空间大小</td></tr><tr><td><code>pri.store.size</code></td><td>主节点占空间大小</td></tr></tbody></table><h4 id="增删改查"><a href="#增删改查" class="headerlink" title="增删改查"></a>增删改查</h4><ul><li><p>增加一个索引：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PUT index_name</span><br></pre></td></tr></table></figure></li><li><p>添加一个文档</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">PUT /index_name/type/id</span><br><span class="line">&#123;</span><br><span class="line">"filed":"value"</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  "_index": "miao",</span><br><span class="line">  "_type": "person",</span><br><span class="line">  "_id": "1",</span><br><span class="line">  "_version": 2,</span><br><span class="line">  "result": "updated",</span><br><span class="line">  "_shards": &#123;</span><br><span class="line">    "total": 2,</span><br><span class="line">    "successful": 1,</span><br><span class="line">    "failed": 0</span><br><span class="line">  &#125;,</span><br><span class="line">  "_seq_no": 1,</span><br><span class="line">  "_primary_term": 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>一个索引中只能够存在一个 <code>type</code>，<code>PUT</code> 既能插入也能更新</p></blockquote></li><li><p>查询索引的信息</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">GET /index_name/_search</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  # 占用空间</span><br><span class="line">  "took": 74,</span><br><span class="line">  "timed_out": false,</span><br><span class="line">  # 分片</span><br><span class="line">  "_shards": &#123;</span><br><span class="line">    "total": 5,</span><br><span class="line">    "successful": 5,</span><br><span class="line">    "skipped": 0,</span><br><span class="line">    "failed": 0</span><br><span class="line">  &#125;,</span><br><span class="line"># 命中信息</span><br><span class="line">  "hits": &#123;</span><br><span class="line">      # 命中数据量</span><br><span class="line">    "total": 3,</span><br><span class="line">      # 命中数据最大评分</span><br><span class="line">    "max_score": 1,</span><br><span class="line">    "hits": [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"_index"</span>: <span class="string">"miao"</span>,</span><br><span class="line">        <span class="attr">"_type"</span>: <span class="string">"person"</span>,</span><br><span class="line">        <span class="attr">"_id"</span>: <span class="string">"2"</span>,</span><br><span class="line">        <span class="attr">"_score"</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">"_source"</span>: &#123;</span><br><span class="line">          <span class="attr">"id"</span>: <span class="number">2</span>,</span><br><span class="line">          <span class="attr">"name"</span>: <span class="string">"yindongfa"</span>,</span><br><span class="line">          <span class="attr">"age"</span>: <span class="number">19</span>,</span><br><span class="line">          <span class="attr">"sex"</span>: <span class="string">"woman"</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"_index"</span>: <span class="string">"miao"</span>,</span><br><span class="line">        <span class="attr">"_type"</span>: <span class="string">"person"</span>,</span><br><span class="line">        <span class="attr">"_id"</span>: <span class="string">"1"</span>,</span><br><span class="line">        <span class="attr">"_score"</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">"_source"</span>: &#123;</span><br><span class="line">          <span class="attr">"id"</span>: <span class="number">1</span>,</span><br><span class="line">          <span class="attr">"name"</span>: <span class="string">"miaochuntong"</span>,</span><br><span class="line">          <span class="attr">"age"</span>: <span class="number">18</span>,</span><br><span class="line">          <span class="attr">"sex"</span>: <span class="string">"man"</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"_index"</span>: <span class="string">"miao"</span>,</span><br><span class="line">        <span class="attr">"_type"</span>: <span class="string">"person"</span>,</span><br><span class="line">        <span class="attr">"_id"</span>: <span class="string">"3"</span>,</span><br><span class="line">        <span class="attr">"_score"</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">"_source"</span>: &#123;</span><br><span class="line">          <span class="attr">"id"</span>: <span class="number">3</span>,</span><br><span class="line">          <span class="attr">"name"</span>: <span class="string">"fanzhengyao"</span>,</span><br><span class="line">          <span class="attr">"age"</span>: <span class="number">21</span>,</span><br><span class="line">          <span class="attr">"sex"</span>: <span class="string">"man"</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="分词器"><a href="#分词器" class="headerlink" title="分词器"></a>分词器</h2><p>分词是指将文本转换成一系列单词（<code>term or token</code>）的过程，也可以叫做文本分析，在es里面称为<code>Analysis</code>，<code>elasticsearch</code> 的分词器默认是英文分词器，不支持中文，所以需要安装中文分词器：</p><p>分词器下载地址：<a href="https://github.com/medcl/elasticsearch-analysis-ik" target="_blank" rel="noopener">https://github.com/medcl/elasticsearch-analysis-ik</a></p><h3 id="分词器机制"><a href="#分词器机制" class="headerlink" title="分词器机制"></a>分词器机制</h3><table><thead><tr><th align="left"><code>Character Filter</code></th><th align="left">对原始文本进行处理</th><th align="left">例：去除html标签、特殊字符等</th></tr></thead><tbody><tr><td align="left"><code>Tokenizer</code></td><td align="left">将原始文本进行分词</td><td align="left">例：培训机构–&gt;培训，机构</td></tr><tr><td align="left"><code>Token Filters</code></td><td align="left">分词后的关键字进行加工</td><td align="left">例：转小写、删除语气词、近义词和同义词等</td></tr></tbody></table><h3 id="安装分词器"><a href="#安装分词器" class="headerlink" title="安装分词器"></a>安装分词器</h3><p>下载 <code>IK</code> 中文分词器对应的 <code>Elastisearch</code> 版本，解压到 <code>elasticsearch/plugins/ik</code> 目录下。</p><h3 id="测试分词器"><a href="#测试分词器" class="headerlink" title="测试分词器"></a>测试分词器</h3><ul><li><p><code>ik_smart</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line">  "analyzer": "ik_smart", </span><br><span class="line">  "text": "我的名字是姚明"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>分词结果如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"tokens"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"token"</span>: <span class="string">"我"</span>,</span><br><span class="line">      <span class="attr">"start_offset"</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="attr">"end_offset"</span>: <span class="number">1</span>,</span><br><span class="line">      <span class="attr">"type"</span>: <span class="string">"CN_CHAR"</span>,</span><br><span class="line">      <span class="attr">"position"</span>: <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"token"</span>: <span class="string">"的"</span>,</span><br><span class="line">      <span class="attr">"start_offset"</span>: <span class="number">1</span>,</span><br><span class="line">      <span class="attr">"end_offset"</span>: <span class="number">2</span>,</span><br><span class="line">      <span class="attr">"type"</span>: <span class="string">"CN_CHAR"</span>,</span><br><span class="line">      <span class="attr">"position"</span>: <span class="number">1</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"token"</span>: <span class="string">"名字"</span>,</span><br><span class="line">      <span class="attr">"start_offset"</span>: <span class="number">2</span>,</span><br><span class="line">      <span class="attr">"end_offset"</span>: <span class="number">4</span>,</span><br><span class="line">      <span class="attr">"type"</span>: <span class="string">"CN_WORD"</span>,</span><br><span class="line">      <span class="attr">"position"</span>: <span class="number">2</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"token"</span>: <span class="string">"是"</span>,</span><br><span class="line">      <span class="attr">"start_offset"</span>: <span class="number">4</span>,</span><br><span class="line">      <span class="attr">"end_offset"</span>: <span class="number">5</span>,</span><br><span class="line">      <span class="attr">"type"</span>: <span class="string">"CN_CHAR"</span>,</span><br><span class="line">      <span class="attr">"position"</span>: <span class="number">3</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"token"</span>: <span class="string">"姚明"</span>,</span><br><span class="line">      <span class="attr">"start_offset"</span>: <span class="number">5</span>,</span><br><span class="line">      <span class="attr">"end_offset"</span>: <span class="number">7</span>,</span><br><span class="line">      <span class="attr">"type"</span>: <span class="string">"CN_WORD"</span>,</span><br><span class="line">      <span class="attr">"position"</span>: <span class="number">4</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>ik_max_word</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">GET _analyze</span><br><span class="line">&#123;</span><br><span class="line">  "analyzer": "ik_max_word", </span><br><span class="line">  "text": "我的名字是姚明"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>分词结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"tokens"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"token"</span>: <span class="string">"我"</span>,</span><br><span class="line">      <span class="attr">"start_offset"</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="attr">"end_offset"</span>: <span class="number">1</span>,</span><br><span class="line">      <span class="attr">"type"</span>: <span class="string">"CN_CHAR"</span>,</span><br><span class="line">      <span class="attr">"position"</span>: <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"token"</span>: <span class="string">"的"</span>,</span><br><span class="line">      <span class="attr">"start_offset"</span>: <span class="number">1</span>,</span><br><span class="line">      <span class="attr">"end_offset"</span>: <span class="number">2</span>,</span><br><span class="line">      <span class="attr">"type"</span>: <span class="string">"CN_CHAR"</span>,</span><br><span class="line">      <span class="attr">"position"</span>: <span class="number">1</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"token"</span>: <span class="string">"名字"</span>,</span><br><span class="line">      <span class="attr">"start_offset"</span>: <span class="number">2</span>,</span><br><span class="line">      <span class="attr">"end_offset"</span>: <span class="number">4</span>,</span><br><span class="line">      <span class="attr">"type"</span>: <span class="string">"CN_WORD"</span>,</span><br><span class="line">      <span class="attr">"position"</span>: <span class="number">2</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"token"</span>: <span class="string">"是"</span>,</span><br><span class="line">      <span class="attr">"start_offset"</span>: <span class="number">4</span>,</span><br><span class="line">      <span class="attr">"end_offset"</span>: <span class="number">5</span>,</span><br><span class="line">      <span class="attr">"type"</span>: <span class="string">"CN_CHAR"</span>,</span><br><span class="line">      <span class="attr">"position"</span>: <span class="number">3</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"token"</span>: <span class="string">"姚明"</span>,</span><br><span class="line">      <span class="attr">"start_offset"</span>: <span class="number">5</span>,</span><br><span class="line">      <span class="attr">"end_offset"</span>: <span class="number">7</span>,</span><br><span class="line">      <span class="attr">"type"</span>: <span class="string">"CN_WORD"</span>,</span><br><span class="line">      <span class="attr">"position"</span>: <span class="number">4</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="相关度算分"><a href="#相关度算分" class="headerlink" title="相关度算分"></a>相关度算分</h3><p>相关性算分：指文档与查询语句间的相关度，通过倒排索引可以获取与查询语句相匹配的文档列表</p><p>如何将最符合用户查询需求的文档放到前列呢？</p><p>本质问题是一个排序的问题，排序的依据是相关性算分，确定倒排索引哪个文档排在前面</p><p>影响相关度算分的参数：</p><p>1、TF(Term Frequency)：词频，即单词在文档中出现的次数，词频越高，相关度越高</p><p>2、Document Frequency(DF)：文档词频，即单词出现的文档数</p><p>3、IDF(Inverse Document Frequency)：逆向文档词频，与文档词频相反，即1/DF。即单词出现的文档数越少，相关度越高（如果一个单词在文档集出现越少，算为越重要单词）</p><p>4、Field-length Norm：文档越短，相关度越高</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Wed Jul 15 2020 13:09:25 GMT+0800 (GMT+08:00) --&gt;&lt;h2 id=&quot;安装-Elasticsearch&quot;&gt;&lt;a href=&quot;#安装-Elasticsearch&quot; class=&quot;headerlink&quot; ti
      
    
    </summary>
    
    
      <category term="分布式" scheme="https://shijiazhuangbaifeng.github.io/categories/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
    
      <category term="分布式" scheme="https://shijiazhuangbaifeng.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
      <category term="全文检索" scheme="https://shijiazhuangbaifeng.github.io/tags/%E5%85%A8%E6%96%87%E6%A3%80%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>OpenCV</title>
    <link href="https://shijiazhuangbaifeng.github.io/2020/07/13/OpenCV/"/>
    <id>https://shijiazhuangbaifeng.github.io/2020/07/13/OpenCV/</id>
    <published>2020-07-13T02:53:21.000Z</published>
    <updated>2020-07-15T05:08:36.495Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Jul 15 2020 13:09:25 GMT+0800 (GMT+08:00) --><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Wed Jul 15 2020 13:09:25 GMT+0800 (GMT+08:00) --&gt;&lt;!-- rebuild by neat --&gt;
      
    
    </summary>
    
    
      <category term="图像识别" scheme="https://shijiazhuangbaifeng.github.io/categories/%E5%9B%BE%E5%83%8F%E8%AF%86%E5%88%AB/"/>
    
    
      <category term="数据分析" scheme="https://shijiazhuangbaifeng.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
      <category term="python第三方库" scheme="https://shijiazhuangbaifeng.github.io/tags/python%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/"/>
    
      <category term="数据可视化" scheme="https://shijiazhuangbaifeng.github.io/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Pandas</title>
    <link href="https://shijiazhuangbaifeng.github.io/2020/07/13/Pandas/"/>
    <id>https://shijiazhuangbaifeng.github.io/2020/07/13/Pandas/</id>
    <published>2020-07-13T02:53:21.000Z</published>
    <updated>2020-07-14T11:03:00.179Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Jul 15 2020 13:09:25 GMT+0800 (GMT+08:00) --><p><code>pandas</code> 是使 <code>python</code> 成为强大数据分析的语言原因之一，其中最重要的是：</p><ul><li><code>DataFrame</code>：数据表格，二维（行、列）</li><li><code>Series</code>：一维</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">from</span> pandas <span class="keyword">import</span> Series,DataFrame</span><br><span class="line"></span><br><span class="line"><span class="comment"># 画图、可视化</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pylab <span class="keyword">as</span> plt</span><br></pre></td></tr></table></figure><p>导入数据分析三剑客。</p><h2 id="Series"><a href="#Series" class="headerlink" title="Series"></a>Series</h2><p><code>Series</code> 是一组类似一位数组的的对象，由以下两部分组成：</p><ul><li>values：一组数据(<code>ndarray</code>类型)</li><li>index：相关数据的索引标签</li></ul><h3 id="Series-的创建"><a href="#Series-的创建" class="headerlink" title="Series 的创建"></a>Series 的创建</h3><ol><li><p>由列表或者 <code>ndarray</code> 创建</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">series = Series(data = np.random.randint(<span class="number">10</span>,<span class="number">100</span>,size=<span class="number">10</span>), index=list(<span class="string">'asdfghjklq'</span>), name=<span class="string">'Python'</span>)</span><br><span class="line"></span><br><span class="line">series</span><br></pre></td></tr></table></figure><ul><li><code>data</code> ： 相当于 <code>values</code></li><li><code>name</code> ： 相当于去一个名字</li></ul></li><li><p>通过字典来创建</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">series = Series(&#123;<span class="string">'a'</span>:<span class="number">100</span>, <span class="string">'b'</span>:<span class="number">90</span>, <span class="string">'c'</span>:<span class="number">80</span>&#125;, name=<span class="string">'Python'</span>)</span><br><span class="line"></span><br><span class="line">series</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>如果不指定 <code>Series</code> 的索引，默认就会创建整数类型的索引</p></blockquote><p>查看 <code>series</code> 的类型：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">type(series)</span><br><span class="line"></span><br><span class="line">pandas.core.series.Series</span><br></pre></td></tr></table></figure><h3 id="Series-索引"><a href="#Series-索引" class="headerlink" title="Series 索引"></a>Series 索引</h3><ol><li><p>普通索引</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">series[<span class="string">'a'</span>]</span><br><span class="line"></span><br><span class="line">series[[<span class="string">'a'</span>,<span class="string">'b'</span>]]</span><br></pre></td></tr></table></figure></li><li><p>隐式索引</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">series[<span class="number">0</span>]</span><br><span class="line"><span class="comment"># 默认的索引</span></span><br><span class="line">series.iloc[<span class="number">0</span>]</span><br><span class="line"><span class="comment"># 和原来一抹一样</span></span><br><span class="line">series.loc[<span class="string">'a'</span>]</span><br></pre></td></tr></table></figure></li></ol><h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><p>可以将 <code>Series</code> 看做成是有一个有定长度的有序字典，可以通过 <code>shape</code> 、 <code>index</code> 、 <code>values</code> 和 <code>size</code> 得到 <code>series</code> 的属性。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">series.shape</span><br><span class="line"></span><br><span class="line">(<span class="number">10</span>,)</span><br><span class="line"></span><br><span class="line">series.index</span><br><span class="line"></span><br><span class="line">Index([<span class="string">'a'</span>, <span class="string">'s'</span>, <span class="string">'d'</span>, <span class="string">'f'</span>, <span class="string">'g'</span>, <span class="string">'h'</span>, <span class="string">'j'</span>, <span class="string">'k'</span>, <span class="string">'l'</span>, <span class="string">'q'</span>], dtype=<span class="string">'object'</span>)</span><br><span class="line"></span><br><span class="line">series.values</span><br><span class="line"></span><br><span class="line">array([<span class="number">39</span>, <span class="number">50</span>, <span class="number">37</span>, <span class="number">86</span>, <span class="number">53</span>, <span class="number">30</span>, <span class="number">98</span>, <span class="number">20</span>, <span class="number">14</span>, <span class="number">52</span>])</span><br><span class="line"></span><br><span class="line">series.size</span><br><span class="line"></span><br><span class="line"><span class="number">10</span></span><br></pre></td></tr></table></figure><p>可以通过 <code>head()</code> 和 <code>tail()</code> 来方便的查看 <code>series</code> 的样式，默认显示前五个和后五个。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">series.head()</span><br><span class="line"></span><br><span class="line">series.tail()</span><br></pre></td></tr></table></figure><p>使用 <code>isnull</code> 和 <code>notnull</code> 查看是否为空：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">series.isnull()</span><br><span class="line"></span><br><span class="line">series.notnull()</span><br></pre></td></tr></table></figure><h3 id="Series-的运算"><a href="#Series-的运算" class="headerlink" title="Series 的运算"></a>Series 的运算</h3><p>适用于 <code>ndarry</code> 的运算同样都适合 <code>series</code></p><h2 id="DataFrame"><a href="#DataFrame" class="headerlink" title="DataFrame"></a>DataFrame</h2><h3 id="DataFrame-创建"><a href="#DataFrame-创建" class="headerlink" title="DataFrame 创建"></a>DataFrame 创建</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">DataFrame(data=&#123;<span class="string">'Python'</span>: np.random.randint(<span class="number">0</span>,<span class="number">150</span>,size=<span class="number">5</span>), </span><br><span class="line">                <span class="string">'Math'</span>: np.random.randint(<span class="number">0</span>,<span class="number">150</span>,size=<span class="number">5</span>), </span><br><span class="line">                <span class="string">'En'</span>: np.random.randint(<span class="number">0</span>,<span class="number">150</span>,size=<span class="number">5</span>)&#125;, index=list(<span class="string">'abcde'</span>))</span><br></pre></td></tr></table></figure><p>第二种方式，直接指定，列名：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DataFrame(data=np.random.randint(<span class="number">0</span>,<span class="number">150</span>,size=(<span class="number">10</span>,<span class="number">5</span>)), index=list(<span class="string">'asdfgzxcvb'</span>), columns=[<span class="string">'Python'</span>, <span class="string">'JAVA'</span>, <span class="string">'C++'</span>, <span class="string">'C'</span>, <span class="string">'GO'</span>])</span><br></pre></td></tr></table></figure><h3 id="保存与读取"><a href="#保存与读取" class="headerlink" title="保存与读取"></a>保存与读取</h3><ol><li><p>保存为 <code>csv</code> 文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data.to_csv(<span class="string">'./data.csv'</span>)</span><br></pre></td></tr></table></figure></li><li><p>保存为 <code>excel</code> 文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data.to_excel(<span class="string">'./data.xlsx'</span>)</span><br></pre></td></tr></table></figure><p>保存为 <code>excel</code> 文件，需要安装 <code>openpyxl</code> 文件</p></li><li><p>读取指定的文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">data = pd.read_csv(<span class="string">'data.csv'</span>)</span><br><span class="line">data = data.rename(&#123;<span class="string">'Unnamed: 0'</span>:<span class="string">'index'</span>&#125;, axis=<span class="number">1</span>)</span><br><span class="line">data.set_index(keys= <span class="string">'index'</span>)</span><br></pre></td></tr></table></figure></li></ol><h3 id="DataFrame-的属性"><a href="#DataFrame-的属性" class="headerlink" title="DataFrame 的属性"></a>DataFrame 的属性</h3><ul><li><p><code>index</code> ，返回所有的索引</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data.index</span><br></pre></td></tr></table></figure></li><li><p><code>columns</code> 列的列名</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data.columns</span><br></pre></td></tr></table></figure></li><li><p><code>shape</code> 数组格式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data.shape</span><br></pre></td></tr></table></figure></li></ul><h3 id="DataFrame-索引"><a href="#DataFrame-索引" class="headerlink" title="DataFrame 索引"></a>DataFrame 索引</h3><ol><li><p>通过列进行索引</p><ul><li><p>通过字典的方式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data[<span class="string">'Python'</span>]</span><br></pre></td></tr></table></figure></li><li><p>通过属性的方式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data.Python</span><br></pre></td></tr></table></figure></li></ul><p>返回的是一个 <code>Series</code> 对象，所以 <code>DataFrame</code> 是由多个 <code>Series</code>组成，他们共用一个 <code>index</code></p></li><li><p>通过行索引获取</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data.iloc[[<span class="number">1</span>,<span class="number">2</span>]]</span><br></pre></td></tr></table></figure><p>如果取一个就是 <code>Series</code></p></li><li><p>切片</p><p>直接使用切片，不能对列进行切片，但是可以对行：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data[<span class="string">'a'</span>:<span class="string">'f'</span>]</span><br></pre></td></tr></table></figure></li><li><p>列切片</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data.iloc[:,<span class="number">1</span>:<span class="number">3</span>]</span><br></pre></td></tr></table></figure></li></ol><h3 id="DataFrame-的运算"><a href="#DataFrame-的运算" class="headerlink" title="DataFrame 的运算"></a>DataFrame 的运算</h3><ul><li><p>相关度计算</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data.corr()</span><br></pre></td></tr></table></figure></li><li><p>方差</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data.var()</span><br></pre></td></tr></table></figure></li><li><p><code>DataFrame</code> 的基本信息</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data.info()</span><br></pre></td></tr></table></figure></li></ul><h3 id="DataFrame-之间的运算"><a href="#DataFrame-之间的运算" class="headerlink" title="DataFrame 之间的运算"></a>DataFrame 之间的运算</h3><ul><li><p><code>dataFrame.add()</code> 两者相加</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data_class_01 + data_class_02</span><br></pre></td></tr></table></figure></li></ul><h2 id="多层索引"><a href="#多层索引" class="headerlink" title="多层索引"></a>多层索引</h2><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Wed Jul 15 2020 13:09:25 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;&lt;code&gt;pandas&lt;/code&gt; 是使 &lt;code&gt;python&lt;/code&gt; 成为强大数据分析的语言原因之一，其中最重要的是：&lt;/p&gt;&lt;
      
    
    </summary>
    
    
      <category term="Python" scheme="https://shijiazhuangbaifeng.github.io/categories/Python/"/>
    
    
      <category term="数据分析" scheme="https://shijiazhuangbaifeng.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
      <category term="python第三方库" scheme="https://shijiazhuangbaifeng.github.io/tags/python%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/"/>
    
      <category term="数据可视化" scheme="https://shijiazhuangbaifeng.github.io/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Numpy</title>
    <link href="https://shijiazhuangbaifeng.github.io/2020/07/08/Numpy/"/>
    <id>https://shijiazhuangbaifeng.github.io/2020/07/08/Numpy/</id>
    <published>2020-07-08T02:53:21.000Z</published>
    <updated>2020-07-10T14:09:00.599Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Jul 15 2020 13:09:25 GMT+0800 (GMT+08:00) --><p>NumPy是Python中科学计算的基础包。它是一个Python库，提供多维数组对象，各种派生对象（如掩码数组和矩阵），以及用于数组快速操作的各种API，有包括数学、逻辑、形状操作、排序、选择、输入输出、离散傅立叶变换、基本线性代数，基本统计运算和随机模拟等等。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install numpy</span><br></pre></td></tr></table></figure><h2 id="创建数组"><a href="#创建数组" class="headerlink" title="创建数组"></a>创建数组</h2><h3 id="array"><a href="#array" class="headerlink" title="array"></a>array</h3><p>根据已有的 <code>array</code> 对象，来创建经过 <code>numpy</code> 增强以后的 <code>ndarray</code> 对象：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">l = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>&#125;</span><br><span class="line"></span><br><span class="line">l = np.array(l)</span><br><span class="line"></span><br><span class="line">type(l)</span><br></pre></td></tr></table></figure><h3 id="生成数组"><a href="#生成数组" class="headerlink" title="生成数组"></a>生成数组</h3><h4 id="ones"><a href="#ones" class="headerlink" title="ones"></a>ones</h4><p>生成一个<code>ndarray</code> 数组的元素全部为 <code>1</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.ones(shape=(<span class="number">5</span>,<span class="number">5</span>), dtype=np.int8)</span><br></pre></td></tr></table></figure><p><code>shape</code> 表示生成数组形状，例如上面的生成二维的数组，第一维和第二维都分别有 <code>5</code> 的元素，<code>dtype</code> 表示元素类型。</p><h4 id="zeros"><a href="#zeros" class="headerlink" title="zeros"></a>zeros</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.zeros(shape=(<span class="number">2</span>,<span class="number">5</span>,<span class="number">2</span>), dtype=np.float)</span><br></pre></td></tr></table></figure><p>效果同上，生成元素为 <code>0</code> 的数组。</p><h4 id="full"><a href="#full" class="headerlink" title="full"></a>full</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.full(shape=(<span class="number">3</span>,<span class="number">1</span>,<span class="number">4</span>), fill_value=<span class="number">3.14</span>)</span><br></pre></td></tr></table></figure><p>自定义填充数组元素的值。</p><h4 id="eye"><a href="#eye" class="headerlink" title="eye"></a>eye</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.eye(N=<span class="number">5</span>)</span><br></pre></td></tr></table></figure><p>生成单位矩阵。</p><h4 id="linespace"><a href="#linespace" class="headerlink" title="linespace"></a>linespace</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.linspace(<span class="number">0</span>,<span class="number">100</span>,<span class="number">101</span>)</span><br></pre></td></tr></table></figure><p>左闭右闭，等差数列，上一个的差和下一个的差永远相等。</p><h4 id="arange"><a href="#arange" class="headerlink" title="arange"></a>arange</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.arange(<span class="number">0</span>,<span class="number">100</span>,<span class="number">3</span>)</span><br></pre></td></tr></table></figure><p>这个函数和 <code>range</code> 函数效果几乎完全相同。</p><h4 id="正太分布"><a href="#正太分布" class="headerlink" title="正太分布"></a>正太分布</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.random.randn(<span class="number">4</span>,<span class="number">5</span>)</span><br></pre></td></tr></table></figure><p>平均值为 <code>0</code> ，方差是 <code>1</code>，这个函数是固定的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">n = np.random.normal(loc=<span class="number">175</span>,scale=<span class="number">2</span>,size=<span class="number">100</span>).round(<span class="number">2</span>)</span><br></pre></td></tr></table></figure><p><code>normal</code> 可以指定 平均值和方差，<code>round</code>函数表示保留的小数位。</p><h2 id="数据方法"><a href="#数据方法" class="headerlink" title="数据方法"></a>数据方法</h2><h3 id="round"><a href="#round" class="headerlink" title="round"></a>round</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">n = np.random.normal(loc=<span class="number">175</span>,scale=<span class="number">2</span>,size=<span class="number">100</span>).round(<span class="number">2</span>)</span><br></pre></td></tr></table></figure><p>指定数据元素保留的小数位。</p><h3 id="三角函数"><a href="#三角函数" class="headerlink" title="三角函数"></a>三角函数</h3><h3 id="np-sin"><a href="#np-sin" class="headerlink" title="np.sin"></a>np.sin</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.sin(n)</span><br></pre></td></tr></table></figure><p>对 <code>n</code> 的每一个元素进行 <code>sin</code> 操作。</p><h2 id="ndarray"><a href="#ndarray" class="headerlink" title="ndarray"></a>ndarray</h2><h3 id="ndarray属性"><a href="#ndarray属性" class="headerlink" title="ndarray属性"></a>ndarray属性</h3><table><thead><tr><th>属性/方法</th><th>作用</th></tr></thead><tbody><tr><td><code>shape</code></td><td>数组对象的格式</td></tr><tr><td><code>dtype</code></td><td>数组元素类型</td></tr><tr><td><code>ndim</code></td><td>数组维度</td></tr><tr><td><code>size</code></td><td>数组元素个数</td></tr><tr><td><code>nbytes</code></td><td>数组元素消耗的总字节数</td></tr><tr><td><code>reshape(shape[, order])</code></td><td>返回包含具有新形状的相同数据的数组。</td></tr></tbody></table><h3 id="切片操作"><a href="#切片操作" class="headerlink" title="切片操作"></a>切片操作</h3><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Wed Jul 15 2020 13:09:25 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;NumPy是Python中科学计算的基础包。它是一个Python库，提供多维数组对象，各种派生对象（如掩码数组和矩阵），以及用于数组快速操作的各
      
    
    </summary>
    
    
      <category term="Python" scheme="https://shijiazhuangbaifeng.github.io/categories/Python/"/>
    
    
      <category term="数据分析" scheme="https://shijiazhuangbaifeng.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
      <category term="python第三方库" scheme="https://shijiazhuangbaifeng.github.io/tags/python%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>Matplotlib</title>
    <link href="https://shijiazhuangbaifeng.github.io/2020/07/08/matplotlib/"/>
    <id>https://shijiazhuangbaifeng.github.io/2020/07/08/matplotlib/</id>
    <published>2020-07-08T02:53:21.000Z</published>
    <updated>2020-07-08T04:00:12.015Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Wed Jul 15 2020 13:09:25 GMT+0800 (GMT+08:00) --><p><code>Matplotlib</code>用来绘制图表的工具，数据可视化，能够绘制柱状图，直方图，折线图等图表，安装<code>Matplotlib</code>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install matplotlib</span><br></pre></td></tr></table></figure><h2 id="绘制折线图"><a href="#绘制折线图" class="headerlink" title="绘制折线图"></a>绘制折线图</h2><p>使用<code>Matplotlib</code>绘图要使用<code>pyplot</code>这个模块：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> pyplot</span><br></pre></td></tr></table></figure><p><code>pyplot</code>关于图表的基本方法如下：</p><table><thead><tr><th>方法</th><th>参数</th><th>作用</th></tr></thead><tbody><tr><td><code>pyplot.title()</code></td><td><code>label</code>：图表的名称</td><td>当前图表的名称</td></tr><tr><td><code>pyplot.rcParams[&#39;font.sans-serif&#39;]</code></td><td>赋予一个字符串，字体</td><td>设置字体，对中文进行支持</td></tr><tr><td><code>pyplot.xlabel()</code></td><td><code>xlabel</code>：x轴的名称</td><td>设置x轴名称</td></tr><tr><td><code>pyplot.ylabel()</code></td><td><code>ylabel</code>：y轴的名称</td><td>设置y轴名称</td></tr><tr><td><code>pyplot.show()</code></td><td></td><td>将内存的表展示出来，重新绘制</td></tr><tr><td><code>pyplot.savefig()</code></td><td>第一个参数为名称</td><td>保存为图片</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> pylot</span><br><span class="line"></span><br><span class="line"><span class="comment"># title 图标的标题</span></span><br><span class="line">pylot.title(<span class="string">'折线图'</span>)</span><br><span class="line"><span class="comment"># 中文标题</span></span><br><span class="line">pylot.rcParams[<span class="string">'font.sans-serif'</span>] = <span class="string">'Kaiti'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 直线</span></span><br><span class="line"><span class="comment"># pylot.plot((1,4),(2,8))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 坐标</span></span><br><span class="line">x = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">5</span>]</span><br><span class="line">y = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">4</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 折线 linewidth 宽度</span></span><br><span class="line">pylot.plot(x, y, linewidth=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># x 轴名称</span></span><br><span class="line">pylot.xlabel(<span class="string">'x轴'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># y 轴的名称</span></span><br><span class="line">pylot.ylabel(<span class="string">'y轴'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示</span></span><br><span class="line">pylot.show()</span><br></pre></td></tr></table></figure><h3 id="绘制一元二次方程"><a href="#绘制一元二次方程" class="headerlink" title="绘制一元二次方程"></a>绘制一元二次方程</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> pylot</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># x 和 y 的值</span></span><br><span class="line">x = np.linspace(<span class="number">-10</span>, <span class="number">10</span>, <span class="number">100</span>, dtype=float)</span><br><span class="line">y = x ** <span class="number">-1</span></span><br><span class="line">print(x)</span><br><span class="line">print(y)</span><br><span class="line"></span><br><span class="line"><span class="comment"># pylot.axhline(0)</span></span><br><span class="line">pylot.axvline(<span class="number">0</span>, color=<span class="string">'red'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 折线 linewidth 宽度</span></span><br><span class="line">pylot.plot(x, y, linewidth=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># x 轴名称</span></span><br><span class="line">pylot.xlabel(<span class="string">'x'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># y 轴的名称</span></span><br><span class="line">pylot.ylabel(<span class="string">'y'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存图片</span></span><br><span class="line">pylot.savefig(<span class="string">"一元二次方程"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示</span></span><br><span class="line">pylot.show()</span><br></pre></td></tr></table></figure><h2 id="分区"><a href="#分区" class="headerlink" title="分区"></a>分区</h2><p><code>sublot</code>将画布分为<code>n</code>行<code>n</code>列，并进入某一块分区：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 分区</span></span><br><span class="line">pylot.subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>)</span><br></pre></td></tr></table></figure><blockquote><p>想要切换分区再次调用即可，但是行列要和上一次一致</p></blockquote><h2 id="散点图"><a href="#散点图" class="headerlink" title="散点图"></a>散点图</h2><p>散点图使用的是<code>scatter</code>方法，该方法有以下参数：</p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td><code>x</code></td><td>一个集合，存放<code>x</code></td></tr><tr><td><code>y</code></td><td>一个集合，存放<code>y</code></td></tr><tr><td><code>s</code></td><td>大小，一个集合，要和点的个数一致</td></tr><tr><td><code>c</code></td><td>颜色，和<code>s</code>相同</td></tr><tr><td><code>alpha</code></td><td>透明度<code>0~1</code></td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> ploy</span><br><span class="line"></span><br><span class="line"><span class="comment"># 等差数列</span></span><br><span class="line">x = np.random.randint(<span class="number">10</span>,<span class="number">100</span>,<span class="number">50</span>)</span><br><span class="line">y = np.random.randint(<span class="number">10</span>,<span class="number">100</span>,<span class="number">50</span>)</span><br><span class="line"><span class="comment"># size</span></span><br><span class="line">size = np.random.randint(<span class="number">50</span>,<span class="number">500</span>,<span class="number">50</span>)</span><br><span class="line"><span class="comment"># color</span></span><br><span class="line">color = np.random.randint(<span class="number">10</span>,<span class="number">100</span>,<span class="number">50</span>)</span><br><span class="line"><span class="comment"># 绘制散点图</span></span><br><span class="line">ploy.scatter(x,y,s=size,alpha=<span class="number">0.5</span>,c=color)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 展示</span></span><br><span class="line">ploy.show()</span><br></pre></td></tr></table></figure><h2 id="图例"><a href="#图例" class="headerlink" title="图例"></a>图例</h2><p>在绘制折线图的时候，会绘制许多条线，每一条线使用不同的样式来描述，需要一块内容来描述每一条线的作用：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> pylot</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成 x</span></span><br><span class="line">x = np.linspace(<span class="number">-10</span>, <span class="number">10</span>, <span class="number">100</span>)</span><br><span class="line">sin_y = np.sin(x)</span><br><span class="line">cos_y = np.cos(x)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制</span></span><br><span class="line">pylot.plot(x, sin_y, <span class="string">'--y'</span>, label=<span class="string">'sin'</span>)</span><br><span class="line">pylot.plot(x, cos_y, <span class="string">'-g'</span>, label=<span class="string">'cos'</span>)</span><br><span class="line"></span><br><span class="line">pylot.axhline(<span class="number">0</span>, c=<span class="string">"#FF6347"</span>, ls=<span class="string">"--"</span>, lw=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示图例 loc : 图例的位置 labels : 每一个线条的注释 lines : 每一个线条的样式</span></span><br><span class="line">pylot.legend(loc=<span class="string">'upper left'</span>)  <span class="comment"># fancybox边框 framealpha透明度 shadow明影边框宽度</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 展示</span></span><br><span class="line">pylot.show()</span><br></pre></td></tr></table></figure><p><code>plot</code>的<code>label</code>参数就是图例的信息，<code>legend</code>显示图例，默认是不显示的，接收一个参数，图例所在的位置.</p><h3 id="格式化"><a href="#格式化" class="headerlink" title="格式化"></a>格式化</h3><p>在<code>plot</code>函数中还接受一个参数<code>fmt</code>格式化线条：</p><center>color</center><table><thead><tr><th>字符</th><th>颜色</th><th>字符</th><th>颜色</th><th>字符</th><th>颜色</th><th>字符</th><th>颜色</th></tr></thead><tbody><tr><td><strong>b</strong></td><td>蓝色</td><td><strong>r</strong></td><td>红色</td><td><strong>m</strong></td><td>洋红色</td><td><strong>k</strong></td><td>黑色</td></tr><tr><td><strong>g</strong></td><td>绿色</td><td><strong>c</strong></td><td>青色</td><td><strong>y</strong></td><td>黄色</td><td><strong>w</strong></td><td>白色</td></tr></tbody></table><center>marker</center><table><thead><tr><th>字符</th><th>标记</th><th>字符</th><th>标记</th><th>字符</th><th>标记</th><th>字符</th><th>标记</th></tr></thead><tbody><tr><td>.</td><td>点标记</td><td>&gt;</td><td>右三角标记</td><td>p</td><td>五边形标记</td><td>D</td><td>菱形标记</td></tr><tr><td>,</td><td>像素标记</td><td>1</td><td>三叉戟标记</td><td>*</td><td>星形标记</td><td>d</td><td>菱形标记</td></tr><tr><td>o</td><td>圆圈标记</td><td>2</td><td>三叉戟标记</td><td>h</td><td>六角形标记</td><td></td><td></td></tr><tr><td>v</td><td>倒三角标记</td><td>3</td><td>三叉戟标记</td><td>H</td><td>六角形标记</td><td>_</td><td>横线标记</td></tr><tr><td>^</td><td>正三角标记</td><td>4</td><td>三叉戟标记</td><td>+</td><td>+标记</td><td></td><td></td></tr><tr><td>&lt;</td><td>左三角标记</td><td>s</td><td>正方形标记</td><td>x</td><td>x标记</td><td></td><td>&lt;</td></tr></tbody></table><center>line</center><table><thead><tr><th>字符</th><th>格式</th><th>字符</th><th>格式</th><th>字符</th><th>格式</th><th>字符</th><th>格式</th></tr></thead><tbody><tr><td><strong>-</strong></td><td>实线</td><td><strong>–</strong></td><td>虚线</td><td><strong>-.</strong></td><td>点划线</td><td><strong>:</strong></td><td>点线</td></tr></tbody></table><h2 id="柱状图"><a href="#柱状图" class="headerlink" title="柱状图"></a>柱状图</h2><p>绘制柱状图使用的函数的<code>bar</code>和<code>barh</code>，<code>barh</code>是用来绘制水平方向的柱状图：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> pyplot</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># 年份</span></span><br><span class="line">x = [<span class="string">'1980'</span>, <span class="string">'1981'</span>, <span class="string">'1982'</span>]</span><br><span class="line"><span class="comment"># 销量</span></span><br><span class="line">y = [<span class="number">2000</span>, <span class="number">3000</span>, <span class="number">4000</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制柱状图</span></span><br><span class="line">pyplot.bar(x, y, width=<span class="number">0.5</span>) <span class="comment"># width 在原来的宽度倍数</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 水平方向绘制</span></span><br><span class="line">pyplot.barh(x, y)</span><br><span class="line"></span><br><span class="line"><span class="comment"># x 坐标的值</span></span><br><span class="line"><span class="comment"># yplot.xticks()</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 展示</span></span><br><span class="line">pyplot.show()</span><br></pre></td></tr></table></figure><blockquote><p><code>xticks</code>用来修改<code>x</code>坐标上x的值</p></blockquote><h3 id="电影票销量"><a href="#电影票销量" class="headerlink" title="电影票销量"></a>电影票销量</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> pyplot</span><br><span class="line"></span><br><span class="line"><span class="comment"># 中文标题</span></span><br><span class="line">pyplot.rcParams[<span class="string">'font.sans-serif'</span>] = <span class="string">'Kaiti'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 电影</span></span><br><span class="line">movie = [<span class="string">'哪吒之魔童降世'</span>, <span class="string">'流浪地球'</span>, <span class="string">'复仇者联盟4：终局之战'</span>, <span class="string">'我和我的祖国'</span>]</span><br><span class="line"><span class="comment"># 三天内票房数</span></span><br><span class="line">movie_day1 = np.random.randint(<span class="number">1000</span>, <span class="number">2000</span>, size=len(movie))</span><br><span class="line">movie_day2 = np.random.randint(<span class="number">1000</span>, <span class="number">2000</span>, size=len(movie))</span><br><span class="line">movie_day3 = np.random.randint(<span class="number">1000</span>, <span class="number">2000</span>, size=len(movie))</span><br><span class="line">print(movie_day1)</span><br><span class="line"><span class="comment"># x 坐标</span></span><br><span class="line">x = np.arange(len(movie))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制柱状图</span></span><br><span class="line">pyplot.bar(x, movie_day1, alpha=<span class="number">0.5</span> , width=<span class="number">0.3</span>, label=<span class="string">'第一天'</span>)</span><br><span class="line">pyplot.bar(x + <span class="number">0.3</span>, movie_day2, alpha=<span class="number">0.5</span>, width=<span class="number">0.3</span>, label=<span class="string">'第一天'</span>)</span><br><span class="line">pyplot.bar(x + <span class="number">0.6</span>, movie_day3, alpha=<span class="number">0.5</span>, width=<span class="number">0.3</span>, label=<span class="string">'第一天'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置值</span></span><br><span class="line">pyplot.xticks(x + <span class="number">0.3</span>,movie)</span><br><span class="line"></span><br><span class="line">pyplot.legend()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 展示</span></span><br><span class="line">pyplot.show()</span><br></pre></td></tr></table></figure><h2 id="饼状图"><a href="#饼状图" class="headerlink" title="饼状图"></a>饼状图</h2><p>饼状图用到的方法是<code>pie</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> pyplot</span><br><span class="line"></span><br><span class="line">man = <span class="number">1060</span></span><br><span class="line">woman = <span class="number">1520</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 中文标题</span></span><br><span class="line">pyplot.rcParams[<span class="string">'font.sans-serif'</span>] = <span class="string">'Kaiti'</span></span><br><span class="line"><span class="comment"># 比例</span></span><br><span class="line">man_perc = man / (man + woman)</span><br><span class="line">woman_perc = <span class="number">1</span> - man_perc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制饼状图</span></span><br><span class="line">pyplot.pie([man_perc,woman_perc],labels=[<span class="string">'男'</span>,<span class="string">'女'</span>],colors=[<span class="string">'red'</span>,<span class="string">'green'</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 展示</span></span><br><span class="line">pyplot.show()</span><br></pre></td></tr></table></figure><h2 id="直方图"><a href="#直方图" class="headerlink" title="直方图"></a>直方图</h2><p>直方图用来观测数据的分布情况：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">直方图关心的是分布的状态</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> pyplot</span><br><span class="line"></span><br><span class="line"><span class="comment"># 正太分布</span></span><br><span class="line">random = np.random.normal(<span class="number">0</span>,<span class="number">0.8</span>,<span class="number">1000</span>)</span><br><span class="line">random1 = np.random.normal(<span class="number">1</span>,<span class="number">0.8</span>,<span class="number">1000</span>)</span><br><span class="line">random2 = np.random.normal(<span class="number">2</span>,<span class="number">0.8</span>,<span class="number">1000</span>)</span><br><span class="line">print(random)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制 binds = 直方图的数量</span></span><br><span class="line">pyplot.hist(random,bins=<span class="number">100</span>,alpha=<span class="number">0.5</span>)</span><br><span class="line">pyplot.hist(random1,bins=<span class="number">100</span>,alpha=<span class="number">0.5</span>)</span><br><span class="line">pyplot.hist(random2,bins=<span class="number">100</span>,alpha=<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line">pyplot.show()</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Wed Jul 15 2020 13:09:25 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;&lt;code&gt;Matplotlib&lt;/code&gt;用来绘制图表的工具，数据可视化，能够绘制柱状图，直方图，折线图等图表，安装&lt;code&gt;Matplo
      
    
    </summary>
    
    
      <category term="Python" scheme="https://shijiazhuangbaifeng.github.io/categories/Python/"/>
    
    
      <category term="数据分析" scheme="https://shijiazhuangbaifeng.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
      <category term="python第三方库" scheme="https://shijiazhuangbaifeng.github.io/tags/python%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/"/>
    
      <category term="数据可视化" scheme="https://shijiazhuangbaifeng.github.io/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
  </entry>
  
</feed>
